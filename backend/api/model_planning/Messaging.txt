Goal: Players sending email-like messages in-game
Features:
    - Ability to make a new 'thread' / email chain
    - Ability to respond to a current chain
    - Make header title for a chain
    - Choose who is included in a new chain
    - Group chains
    - Get a notification when you receive a message
    - Make multiple exclusive chains with the same header

Solution:
    - Chain table
        - game FK
        - title VARCHAR
        - last_updated DATETIME ; for ordering
    - Message table
        - chain FK
        - country_sender FK
        - text VARCHAR
        - date_created (?) ; used for ordering of messages
    - CountryChain table
        - country FK
        - chain FK
        - unread BOOL ; for notification purposes
    - API for messaging:
        - Making messages for a chain
            - POST: accepts a dict of message fields
        - Making a Chain
            - POST: accepts a dict of:
                'id': <id>,
                'title': <title>,
                'game': <game_id>,
                'members': [<country_ids...>]
        - Getting notifications
        - GET: chain info like so:
            - the chain_id keys are ordered by last_updated datetime with most recent at the front,
            - the members are ordered alphabetically, with the last one always being you
            - the messages are ordered by datetime with most recent at the end.
            - {
                <chain_id>: {
                    'title': <title>, 
                    'members': [<countries involved...>], // should this be country_id or country_name or both???
                    'messages': [<messages...>],
                    'unread': True/False
                    }
                ...
                }

Implementation:
    - Player in a game makes a chain as a Country, addressed to # other countries;
        all are put into the CountryChain table and a message is sent.
        All countries except the sneder are notified of a new message and their 'unread' is set to TRUE